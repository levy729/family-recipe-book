#!/usr/bin/env sh

# Source utility functions
. "$(dirname "$0")/../scripts/hook-utils.sh"

# Initialize hook utilities
init_hook_utils

echo "ðŸš€ Starting pre-push validation..."

# Phase 1: Linting and Formatting
print_phase_start "Linting and Formatting" "Main Project"
set_phase "Linting and Formatting"
set_project "Main Project"

print_step_progress 1 8 "Running ESLint on main project..."
run_command_with_error_handling "npm run lint" "ESLint validation" "lint" "Main Project"

print_step_progress 2 8 "Checking code formatting..."
run_command_with_error_handling "npm run format:check" "Code formatting check" "format" "Main Project"

print_phase_success "Linting and Formatting" "Main Project"

# Phase 2: TypeScript Type Checking
print_phase_start "TypeScript Type Checking" "Main Project"
set_phase "TypeScript Type Checking"
set_project "Main Project"

print_step_progress 3 8 "Running TypeScript compilation..."
run_command_with_error_handling "npx tsc --noEmit --project tsconfig.json" "TypeScript compilation" "typescript" "Main Project"

print_phase_success "TypeScript Type Checking" "Main Project"

# Phase 3: Main Project Build
print_phase_start "Main Project Build" "Main Project"
set_phase "Main Project Build"
set_project "Main Project"

print_step_progress 4 8 "Building main project..."
run_command_with_error_handling "npm run build" "Main project build" "build" "Main Project"

print_phase_success "Main Project Build" "Main Project"

# Phase 4: Recipe Builder Validation
print_phase_start "Recipe Builder Validation" "Recipe Builder"
set_phase "Recipe Builder Validation"
set_project "Recipe Builder"

print_step_progress 5 8 "Building recipe builder project..."
cd recipe-builder
run_command_with_error_handling "npm run build" "Recipe builder build" "build" "Recipe Builder"

print_step_progress 6 8 "Running recipe builder tests..."
run_command_with_error_handling "npm test" "Recipe builder tests" "test" "Recipe Builder"

cd ..
print_phase_success "Recipe Builder Validation" "Recipe Builder"

# Phase 5: Main Project Tests
print_phase_start "Main Project Tests" "Main Project"
set_phase "Main Project Tests"
set_project "Main Project"

print_step_progress 7 8 "Running main project tests..."
run_command_with_error_handling "npm run test:ci" "Main project tests" "test" "Main Project"

print_phase_success "Main Project Tests" "Main Project"

# Phase 6: Security Audit
print_phase_start "Security Audit" "Both Projects"
set_phase "Security Audit"
set_project "Both Projects"

print_step_progress 8 8 "Running security audit on main project..."
run_command_with_error_handling "npm audit --audit-level=moderate" "Main project security audit" "security" "Main Project"

print_step_progress 9 8 "Running security audit on recipe builder..."
cd recipe-builder
run_command_with_error_handling "npm audit --audit-level=moderate" "Recipe builder security audit" "security" "Recipe Builder"
cd ..

print_phase_success "Security Audit" "Both Projects"

# Phase 7: Cross-Project Validation
print_phase_start "Cross-Project Validation" "Both Projects"
set_phase "Cross-Project Validation"
set_project "Both Projects"

print_step_progress 10 8 "Running cross-project validation..."
# TODO: Add cross-project validation script call here
print_info "Cross-project validation placeholder - will be implemented in task 4.0"
print_success "Cross-project validation passed"

print_phase_success "Cross-Project Validation" "Both Projects"

# Final Summary
print_hook_summary "Pre-push Hook" 7 7 0

print_success "ðŸŽ‰ All pre-push checks passed successfully!"
print_success "ðŸš€ Ready to push to remote repository!" 